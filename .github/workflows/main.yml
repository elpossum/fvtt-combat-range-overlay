name: Release Creation

on: 
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
    - name: Checkout
      uses: actions/checkout@v3

      # Setup Node
    - name: Setup Node
      uses: actions/setup-node@v4
      with: 
        node-version: 20
      
      # Install dependencies
    - name: Install dependencies
      run: npm ci

      # Build with Vite
    - name: Build with Vite
      run: npm run build

    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: TomaszKandula/variable-substitution@v1.0.2
      with:
        files: './static/module.json'
      env:
        version: ${{github.event.release.tag_name}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

    # Create a zip file with all files required by the module to add to the release
    - name: Create module.zip
      run: zip -r ./module.zip dist

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # Set this to false if you want to prevent updating existing releases
        name: ${{ github.event.release.name }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './static/module.json, ./module.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}

    # Minify manifest and write to output
    - name: Get manifest
      id: get_manifest
      run: echo "manifest=$(cat module.json | jq -c .)" >> $GITHUB_OUTPUT

    # Substitute values in apiRequest.json
    - name: Substitute values in API request
      id: sub_values_api
      uses: TomaszKandula/variable-substitution@v1.0.2
      with:
        files: 'apiRequest.json'
      env:
        release.version: ${{github.event.release.tag_name}}
        release.manifest: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.json
        release.compatibility.minimum: ${{ fromJson(steps.get_manifest.outputs.manifest).compatibility.minimum }}
        release.compatibility.verified: ${{ fromJson(steps.get_manifest.outputs.manifest).compatibility.verified }}

    # Minify API request and write to output
    - name: Get API body
      id: get_body
      run: echo "body=$(cat apiRequest.json | jq -c .)" >> $GITHUB_OUTPUT

    # Make API request
    - name: Make API request
      id: api_request
      run: |
        curl -s \
        -H 'Content-Type: application/json' \
        -H 'Authorization: ${{ secrets.FVTT_API_TOKEN }}' \
        -d '${{ steps.get_body.outputs.body }}' \
        ${{ secrets.FVTT_API_ENDPOINT }} \
        | jq .